import { render, screen } from '@testing-library/react';
import { BrowserRouter } from 'react-router-dom';
import userEvent from '@testing-library/user-event';


import App from './App';
import About from './pages/About';

// O componente BrowserRouter para envolver o App.
// O mesmo procedimento precisa ser feito ao renderizar o componente no contexto de um teste:
it('Renderiza texto da p√°gina inicial', () => {
  render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
  expect(screen.getByText(/Voc√™ est√° na p√°gina In√≠cio/i)).toBeInTheDocument();
})

// Outra forma de envolver o App com o componente BrowserRouter √© utilizando o argumento wrapper:
it('Renderiza o texto utilizando wrapper', () => {
  render(<App />, { wrapper: BrowserRouter });
  expect(screen.getByText(/Voc√™ est√° na p√°gina In√≠cio/i)).toBeInTheDocument();
});

// Observa√ß√£o üîé: As duas formas funcionam de maneira semelhante. Voc√™ pode optar por utilizar a forma que preferir!


// Ap√≥s a renderiza√ß√£o do componente App, faz o click no link com o texto Sobre,
// com o aux√≠lio do userEvent. Ao ser clicado, ele buscar√° pelo texto Voc√™ est√° na p√°gina Sobre,
// indicando que o teste navegou para o componente About.
it('Navega para p√°gina About', async () => {
  render(<App />, { wrapper: BrowserRouter });
  expect(screen.getByText(/Voc√™ est√° na p√°gina In√≠cio/i)).toBeInTheDocument();

  const aboutLink = screen.getByRole('link', { name: /Sobre/i});
  await userEvent.click(aboutLink);
  expect(screen.getByText(/Voc√™ est√° na p√°gina Sobre/i)).toBeInTheDocument();
})

it('Renderiza o componente About', () => {
  render(<About />, { wrapper: BrowserRouter });
  expect(screen.getByText(/Voc√™ est√° na p√°gina Sobre/i)).toBeInTheDocument();
});

it('Navega para p√°gina Inicio', async () => {
  render(<About />, { wrapper: BrowserRouter });

  expect(screen.getByText(/Voc√™ est√° na p√°gina Sobre/i)).toBeInTheDocument();
  const homeLink = screen.getByRole('link', { name: /In√≠cio/i });
  await userEvent.click(homeLink);

  expect(screen.getByText(/Voc√™ est√° na p√°gina In√≠cio/i)).toBeInTheDocument();
});

