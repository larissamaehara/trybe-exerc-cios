version: '3'
services:
  frontend:
    build: frontend/    # Especificamos o contexto, ou seja, a pasta onde está o Dockerfile.
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - backend #cria uma dependencia entre os serviços, ou seja, o serviço frontend só será iniciado após o backend
    volumes:
      - ./frontend/src:/frontend/src
    networks:
      - rede-virtual-1
  backend:
    build: backend/     # Mesmo caso aqui.
    restart: always
    ports:
      - 3001:3001
    environment:
      - DB_HOST=database
    depends_on:
      - database #cria uma dependencia entre os serviços, ou seja, o serviço backend só será iniciado após o database
    networks:
      - rede-virtual-1
      - rede-virtual-2  
  database:
    image: betrybe/docker-compose-example-database:v1    # Especificamos a Imagem Docker diretamente
    restart: always
    networks:
      - rede

volumes:
  dados-do-banco: #cria um volume para o banco de dados

networks:
  rede-virtual-1:
  rede-virtual-2:
      
    #O Compose possui quatro políticas de reinicialização, sendo elas:
#no : define que o container não reiniciará automaticamente (Padrão);
#on-failure: define que o container será reiniciado caso ocorra alguma falha apontada pelo exit code, diferente de zero;
#always: especifica que sempre que o serviço parar, seja por um falha ou porque ele simplesmente finalizou sua execução, ele deverá ser reiniciado;
#unless-stopped: define que o container sempre será reiniciado, a menos que utilizemos o comando docker stop <container> manualmente.